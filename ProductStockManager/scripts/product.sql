DROP TABLE PRODUCT_IO;
DROP TABLE PRODUCT_STOCK;

CREATE TABLE PRODUCT_STOCK (
  PRODUCT_ID  VARCHAR2(30) PRIMARY KEY,
  P_NAME  VARCHAR2(30)  NOT NULL,
  PRICE NUMBER(10)  NOT NULL,
  DESCRIPTION VARCHAR2(50),
  STOCK NUMBER DEFAULT 0 
);

/*
PRODUCT_IO 테이블 제약조건 설명
PRODUCT 테이블에 상품 삭제 시 PRODUCT_IO 테이블에도 해당 상품 관련된 데이터들 삭제
되도록 외래키 제약조건 옵션 부여
IO_DATE 컬럼의 기본값 SYSDATE, STATUS 컬럼 값으로는 ‘입고’, ‘출고’만 INSERT 될 수 있도
록 제약조건 부여할 것
*/
CREATE TABLE PRODUCT_IO (
  IO_NUM NUMBER(10) PRIMARY KEY,
  PRODUCT_ID REFERENCES PRODUCT_STOCK (PRODUCT_ID) ON DELETE CASCADE,
  IO_DATE DATE DEFAULT SYSDATE NOT NULL,
  AMOUNT NUMBER(10) NOT NULL,
  STATUS VARCHAR2(10) CHECK(STATUS IN ('입고','출고'))
);

--상품정보 insert
INSERT INTO PRODUCT_STOCK VALUES ('nb_ss7', '삼성노트북', 1570000, '시리즈 7', DEFAULT);
INSERT INTO PRODUCT_STOCK VALUES ('nb_macbook_air', '맥북에어', 1200000, 'xcode 4', DEFAULT);
INSERT INTO PRODUCT_STOCK VALUES ('pc_ibm', 'ibmPC', 750000, 'windows 8', DEFAULT);


/*
시퀀스 생성
PRODUCT_IO 테이블에 데이터 INSERT시 IO_NUM을 위한 SEQUENCE 생성 후 작업할 것
*/
DROP SEQUENCE SEQ_IONUM;

CREATE SEQUENCE SEQ_IONUM
START WITH 1
INCREMENT BY 1
MAXVALUE 999
NOCYCLE
NOCACHE;

/*
트리거 생성
PRODUCT_IO 테이블에 입고 또는 출고에 대한 데이터 삽입 시 각 상태에 따라 PRODUCT 테
이블의 STOCK 컬럼 값 자동으로 수정되도록 트리거 생성 후 작업할 것
*/
CREATE OR REPLACE TRIGGER TRI_PRODUCT_AMOUNT
	AFTER INSERT
	ON PRODUCT_IO
	FOR EACH ROW
BEGIN
  IF :NEW.STATUS = '입고'
    THEN
      UPDATE PRODUCT_STOCK
         SET STOCK = STOCK + :NEW.AMOUNT
       WHERE PRODUCT_ID = :NEW.PRODUCT_ID;
  END IF;
  
  IF :NEW.STATUS = '출고'
    THEN
	  UPDATE PRODUCT_STOCK
	     SET STOCK = STOCK - :NEW.AMOUNT
	   WHERE PRODUCT_ID = :NEW.PRODUCT_ID;
  END IF;
END;
/	
